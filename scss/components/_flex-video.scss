// Foundation for Sites by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

////////////////////////////////////////
/// @group flex-video
////////////////////////////////////////

//--------------------------------------
// Sizes
//
/// Margin below a flex video container.
/// @type Number
$flexvideo-margin-bottom: rem-calc(16) !default;

/// Padding used to create a 4:3 aspect ratio.
/// @type Number
$flexvideo-ratio: 4 by 3 !default;

/// Padding used to create a 16:9 aspect ratio.
/// @type Number
$flexvideo-ratio-widescreen: 16 by 9 !default;

/// Creates a percentage height that can be used as padding in a flex video container.
/// @param {List} $ratio - Ratio to use to calculate the height, formatted as `x by y`.
/// @return {Number} A percentage value that can be used as the `padding-bottom` parameter of a flex video container.
@function flex-video($ratio) {
  $w: nth($ratio, 1);
  $h: nth($ratio, 3);
  @return $h / $w * 100%;
}


////////////////////////////////////////
////////////////////////////////////////
////////////////////////////////////////
/// Flex-video
////////////////////////////////////////

/// Creates a flex video container.
/// @param {List} $ratio [$flexvideo-ratio] - Ratio to use for the container, formatted as `x by y`.
@mixin flex-video($ratio: $flexvideo-ratio-widescreen) {
  height: 0;
  margin-bottom: $flexvideo-margin-bottom;
  overflow: hidden;
  padding-bottom: flex-video($ratio);
  position: relative;

  iframe,
  object,
  embed,
  video {
    #{$global-left}: 0;
    height: 100%;
    position: absolute;
    top: 0;
    width: 100%;
  }
}

@mixin foundation-flex-video {
  .flex-video {
    @include flex-video;

    &.no-widescreen {
      padding-bottom: flex-video($flexvideo-ratio);
    }

    //&.vimeo {
    //  padding-top: 0;
    //}
  }
}
