// Foundation for Sites by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

////////////////////////////////////////
/// @group switch
////////////////////////////////////////

//--------------------------------------
// Colors
//
/// Background color of a switch.
/// @type Color
$switch-background: $global-switch-background !default;

/// Background active color of a switch.
/// @type Color
$switch-background-active: $global-switch-background-active !default;

/// Background color for the switch container and paddle.
/// @type Color
$switch-paddle-background: $global-switch-paddle-background !default;

$switch-container-color: $global-switch-container-color !default;

//--------------------------------------
// Radius
//
/// border radius of the switch paddle
/// @type Number
$switch-paddle-radius: $global-radius !default;

//--------------------------------------
// Status
//
/// Border radius of the switch
/// @type Number
$switch-radius: $global-radius !default;

$switch-radius-status: true !default;
$switch-different-sizes-status: true !default;

//--------------------------------------
// Sizes
//
/// Height of a switch, with no class applied.
/// @type Number
$switch-height: 2rem !default;

/// Height of a switch with .tiny class.
/// @type Number
$switch-height-tiny-coefficient: 0.8 !default;

/// Height of a switch with .small class.
/// @type Number
$switch-height-small-coefficient: 0.9 !default;

/// Height of a switch with .large class.
/// @type Number
$switch-height-large-coefficient: 1.1 !default;

/// border around a modal.
/// @type Number
$switch-margin: $global-margin !default;

/// Spacing between a switch paddle and the edge of the body.
/// @type Number
$switch-paddle-offset: $global-border-width !default;

/// switch transition.
/// @type Number
$switch-paddle-transition: all 0.25s ease-out !default;

$switch-container-font-size: rem-calc(14) !default;
$switch-container-font-weight: bold !default;
$switch-width: 4rem !default;
$switch-paddle-height: $switch-height -
  (rem-calc(strip-unit($switch-paddle-offset)) * 2) !default;
$switch-paddle-width: (
  $switch-width - (rem-calc(strip-unit($switch-paddle-offset)) * 4)
) / 2 !default;
$switch-paddle-text-outer-side-margin: 6% !default; // ONLY PERCENTS

// $switch-width: $switch-height * 2;
// $paddle-height: $switch-height - (rem-calc($switch-paddle-offset) * 2);
// $paddle-width: $switch-height - (rem-calc($switch-paddle-offset) * 2);
// $paddle-active-offest: $switch-width - $paddle-width - rem-calc($switch-paddle-offset);

////////////////////////////////////////
/// Switch
////////////////////////////////////////

// make them variables
// ask about accessibility on label
// change class name for text

/// Adds styles for a switch container. Apply this to a container class.
@mixin switch-container {
  position: relative;
  margin-bottom: $switch-margin;
  outline: 0;
  user-select: none;
  // These properties cascade down to the switch text
  @if $switch-container-color != $body-font-color {
    color: $switch-container-color;
  }

  @if $switch-container-font-size != 1rem {
    font-size: $switch-container-font-size;
  }

  @if $switch-container-font-weight != normal {
    font-weight: $switch-container-font-weight;
  }
}

/// Adds styles for a switch input. Apply this to an `<input>` within a switch.
@mixin switch-input {
  position: absolute;
  margin-bottom: 0; //??
  opacity: 0;
}

/// Adds styles for the background and paddle of a switch. Apply this to a `<label>` within a switch.
@mixin switch-paddle {
  position: relative;
  display: block;
  width: $switch-width;
  height: $switch-height;

  // Resetting these <label> presets so type styles cascade down
  color: inherit;
  font-weight: inherit;
  background: $switch-background;
  cursor: pointer;
  transition: $switch-paddle-transition;

  @if ($switch-radius-status) and ($switch-radius != 0) {
    border-radius: $switch-radius;
  }

  // Needed to override specificity
  input + & {
    margin: 0;
  }

  // The paddle itself
  &::after {
    #{$global-left}: $switch-paddle-offset;
    position: absolute;
    top: $switch-paddle-offset;
    display: block;
    width: $switch-paddle-width;
    height: $switch-paddle-height;
    background: $switch-paddle-background;
    transform: translate3d(0, 0, 0);
    transition: $switch-paddle-transition;
    content: "";

    @if ($switch-radius-status) and ($switch-paddle-radius != 0) {
      border-radius: $switch-paddle-radius;
    }
  }

  // Change the visual style when the switch is active
  input:checked ~ & {
    background: $switch-background-active;

    &::after {
      #{$global-left}: $switch-width - $switch-paddle-width -
        (($switch-width - ($switch-paddle-width * 2)) / 4);
    }
  }

  input:focus ~ & {
    @include disable-mouse-outline;
  }
}

/// Adds base styles for active/inactive text inside a switch. Apply this to text elements inside the switch `<label>`.
@mixin switch-text {
  position: absolute;
  top: 50%;
  width: 50% - $switch-paddle-text-outer-side-margin;
  text-align: center;
  transform: translateY(-50%);
}

/// Adds styles for the active state text within a switch.
@mixin switch-text-active {
  display: none;
  #{$global-left}: $switch-paddle-text-outer-side-margin;

  input:checked + label > & {
    display: block;
  }
}

/// Adds styles for the inactive state text within a switch.
@mixin switch-text-inactive {
  #{$global-left}: 50%;

  input:checked + label > & {
    display: none;
  }
}

/// Changes the size of a switch by modifying the size of the body and paddle. Apply this to a switch container.
/// @param {Number} $font-size [1rem] - Font size of label text within the switch.
/// @param {Number} $width [4rem] - Width of the switch body.
/// @param {Number} $switch-height [2rem] - Height of the switch body.
/// @param {Number} $paddle-offset [0.25rem] - Spacing between the switch paddle and the edge of the switch body.
@mixin switch-size(
  $font-size: $switch-container-font-size,
  $width: $switch-width,
  $height: $switch-height,
  
  $paddle-offset: $switch-paddle-offset
) {
  $paddle-height: $height - (rem-calc(strip-unit($paddle-offset)) * 2);
  $paddle-width: ($width - (rem-calc(strip-unit($paddle-offset)) * 4)) / 2;
  $paddle-left-active: $width - $paddle-width -
    rem-calc(strip-unit($paddle-offset));

  height: $height; //??

  .switch-paddle {
    width: $width;
    height: $height;
    font-size: $font-size;
  }

  .switch-paddle::after {
    width: $paddle-width;
    height: $paddle-height;
  }

  input:checked ~ .switch-paddle::after {
    #{$global-left}: $paddle-left-active;
  }
}

@mixin foundation-switch {
  // Container class
  .switch {
    @include switch-container;

    height: $switch-height; //??
  }

  // <input> element
  .switch-input {
    @include switch-input;
  }

  // <label> element
  .switch-paddle {
    @include switch-paddle;
  }

  // Base label text styles
  %switch-text {
    @include switch-text;
  }

  // Active label text styles
  .switch-active {
    @extend %switch-text;

    @include switch-text-active;
  }

  // Inactive label text styles
  .switch-inactive {
    @extend %switch-text;

    @include switch-text-inactive;
  }

  // Switch sizes
  @if $switch-different-sizes-status {
    .switch.tiny {
      @include switch-size(
        $switch-container-font-size * $switch-height-tiny-coefficient,
        $switch-width * $switch-height-tiny-coefficient,
        $switch-height * $switch-height-tiny-coefficient,
        
        $switch-paddle-offset
      );
    }

    .switch.small {
      @include switch-size(
        $switch-container-font-size * $switch-height-small-coefficient,
        $switch-width * $switch-height-small-coefficient,
        $switch-height * $switch-height-small-coefficient,
        
        $switch-paddle-offset
      );
    }

    .switch.large {
      @include switch-size(
        $switch-container-font-size * $switch-height-large-coefficient,
        $switch-width * $switch-height-large-coefficient,
        $switch-height * $switch-height-large-coefficient,
        
        $switch-paddle-offset
      );
    }
  }
}
