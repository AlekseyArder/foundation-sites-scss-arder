// Foundation for Sites by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

// sass-lint:disable no-qualifying-elements

////////////////////////////////////////
/// @group table
////////////////////////////////////////

//--------------------------------------
// Colors
//
/// Default color for table background.
/// @type Color
$table-background: $global-table-background !default;

/// Default scale for darkening the striped table rows and the table border.
/// @type Number
$table-color-scale: $global-table-color-scale !default;

/// Default scale for darkening the table rows on hover.
/// @type Number
$table-hover-scale: $global-table-hover-scale !default;

/// Default color of standard rows on hover.
/// @type List
$table-row-hover: $global-table-row-hover !default;

/// Default color of striped rows on hover.
/// @type List
$table-row-stripe-hover: $global-table-row-stripe-hover !default;

/// Default background color for striped rows.
/// @type Color
$table-striped-background: $global-table-striped-background !default;

/// Default color for header background.
/// @type Color
$table-head-background: $global-table-head-background !default;

/// Default color for footer background.
/// @type Color
$table-foot-background: $global-table-foot-background !default;

/// Default font color for header.
/// @type Color
$table-head-font-color: $global-table-head-font-color !default;

/// Default font color for footer.
/// @type Color
$table-foot-font-color: $global-table-foot-font-color !default;

/// Default color of header rows on hover.
/// @type List
$table-head-row-hover: $global-table-head-row-hover !default;

/// Default color of footer rows on hover.
/// @type List
$table-foot-row-hover: $global-table-foot-row-hover !default;

$table-border-color: $global-table-border-color !default;

//--------------------------------------
// Border width
//

$table-border-width: $global-border-width !default;

//--------------------------------------
// Radius
//

$table-border-radius: $global-radius !default;

//--------------------------------------
// Status
//
/// Default value for showing the header when using stacked tables.
/// @type Boolean
$show-header-for-stacked: false !default;

/// If `true`, tables are striped by default and an .unstriped class is created. If `false`, a .striped class is created.
/// @type Boolean
$table-is-striped: true !default;

$table-radius-status: true !default;
$table-border-status: true !default;
$table-background-status: true !default;
$table-background-hover-status: true !default;

//--------------------------------------
// Sizes
//
/// Default value for showing the stripe on rows of the tables, excluding the header and footer. If even, the even rows will have a background color. If odd, the odd rows will have a background color. If empty, or any other value, the table rows will have no striping.
/// @type Keyword
$table-stripe: even !default;

/// Breakpoint at which stacked table switches from mobile to desktop view.
/// @type Breakpoint
$table-stack-breakpoint: medium !default;

/// Default style for table border.
/// @type List
$table-border: $table-border-width solid $table-border-color !default;

/// Default padding for table.
/// @type Number
$table-padding: rem-calc(8 10 10) !default;

$table-caption-font-size: 1rem !default;
$table-caption-font-weight: $global-weight-bold !default;
$table-thead-tfoot-font-weight: $global-weight-bold !default;
$table-thead-tfoot-text-align: #{$global-left} !default;

$table-margin-bottom: $global-margin !default;
$table-thead-tfoot-padding: $table-padding !default;

////////////////////////////////////////
////////////////////////////////////////
////////////////////////////////////////
/// Table
////////////////////////////////////////

@mixin -zf-table-stripe($stripe: $table-stripe) {
  tr {
    // If stripe is set to even, darken the even rows.
    @if $stripe == even {
      &:nth-child(even) {
        background-color: $table-striped-background;
        border-bottom: 0;
      }
    }

    @else if $stripe == odd {
      // If stripe is set to odd, darken the odd rows.
      &:nth-child(odd) {
        background-color: $table-striped-background;
      }
    }
  }
}

@mixin -zf-table-unstripe() {
  tr {
    background-color: $table-background;
    // border-bottom: 0;
    border-bottom: $table-border;
  }
}

@mixin -zf-table-children-styles(
  $stripe: $table-stripe,
  $is-striped: $table-is-striped
) {
  thead,
  tbody,
  tfoot {
    @if ($table-background-status) and ($table-background != transparent) {
      background-color: $table-background;
    }

    @if $table-border-status {
      border: $table-border;
    }
  }

  // Caption
  caption {
    padding: $table-padding;

    @if $table-caption-font-size != 1rem {
      font-size: $table-caption-font-size;
    }

    @if $table-caption-font-weight != normal {
      font-weight: $table-caption-font-weight;
    }
  }

  // Table head
  thead {
    @if ($table-background-status) and
      ($table-head-background != $table-background)
    {
      background: $table-head-background;
    }

    @if $table-head-font-color != $body-font-color {
      color: $table-head-font-color;
    }
  }

  // Table foot
  tfoot {
    @if ($table-background-status) and
      ($table-foot-background != $table-background)
    {
      background: $table-foot-background;
    }

    @if $table-foot-font-color != $body-font-color {
      color: $table-foot-font-color;
    }
  }

  // Table head and foot
  thead,
  tfoot {
    // Rows within head and foot
    @if $table-background-status {
      tr {
        background: transparent;
      }
    }

    // Cells within head and foot
    th,
    td {
      padding: $table-thead-tfoot-padding;

      @if $table-thead-tfoot-font-weight != normal {
        font-weight: $table-thead-tfoot-font-weight;
      }

      @if $table-thead-tfoot-text-align != left {
        text-align: $table-thead-tfoot-text-align;
      }
    }
  }

  //   // Table rows
  //   tbody {
  //     @if $table-background-status {
  //       tr {
  //         // If stripe is set to even, darken the even rows.
  //         @if $stripe == even {
  //           &:nth-child(even) {
  //             background-color: $table-striped-background;
  //           }
  //         } @else if $stripe == odd { // If stripe is set to odd, darken the odd rows.
  //           &:nth-child(odd) {
  //             background-color: $table-striped-background;
  //           }
  //         }
  //       }
  //     }
  //
  //     th,
  //     td {
  //       padding: $table-padding;
  //     }
  //   }
  // }

  // Table rows
  tbody {
    th,
    td {
      padding: $table-padding;
    }
  }

  @if $table-background-status {
    // If tables are striped
    @if $is-striped {
      tbody {
        @include -zf-table-stripe($stripe);
      }

      &.unstriped {
        tbody {
          @include -zf-table-unstripe();

          background-color: $table-background;
        }
      }
    }

    @else {
      // If tables are not striped
      tbody {
        @include -zf-table-unstripe();
      }

      &.striped {
        tbody {
          @include -zf-table-stripe($stripe);
        }
      }
    }
  }
}

/// Adds the general styles for tables.
/// @param {Keyword} $stripe [$table-stripe] - Uses keywords even, odd, or none to darken rows of the table. The default value is even.
@mixin table($stripe: $table-stripe, $nest: false) {
  width: 100%;
  margin-bottom: $table-margin-bottom;
  border-collapse: collapse;

  @if ($table-radius-status) and ($table-border-radius != 0) {
    border-radius: $table-border-radius;
  }

  @if $nest {
    @include -zf-table-children-styles($stripe);
  }

  @else {
    @at-root {
      @include -zf-table-children-styles($stripe);
    }
  }
}

/// Adds the ability to horizontally scroll the table when the content overflows horizontally.
@mixin table-scroll {
  display: block;
  width: 100%;
  overflow-x: auto;
}

/// Slightly darkens the table rows on hover.
@mixin table-hover {
  @if $table-head-row-hover != $table-head-background {
    thead tr {
      //Darkens the table header rows on hover.
      &:hover {
        background-color: $table-head-row-hover;
      }
    }
  }

  @if $table-foot-row-hover != $table-foot-background {
    tfoot tr {
      //Darkens the table footer rows on hover.
      &:hover {
        background-color: $table-foot-row-hover;
      }
    }
  }

  tbody tr {
    //Darkens the non-striped table rows on hover.
    &:hover {
      background-color: $table-row-hover;
    }
  }

  // //Darkens the even striped table rows.
  // @if($table-stripe == even) {
  //   &:nth-of-type(even):hover {
  //     background-color: $table-row-stripe-hover;
  //   }
  // } @else if ($table-stripe == odd) { //Darkens the odd striped table rows.
  //   &:nth-of-type(odd):hover {
  //     background-color: $table-row-stripe-hover;
  //   }
  // }
  // }

  @if $table-background-status {
    @if $table-is-striped {
      @if ($table-stripe == even) {
        // Darkens the even striped table rows.
        &:not(.unstriped) tr:nth-of-type(even):hover {
          background-color: $table-row-stripe-hover;
        }
      }

      @else if ($table-stripe == odd) {
        // Darkens the odd striped table rows.
        &:not(.unstriped) tr:nth-of-type(odd):hover {
          background-color: $table-row-stripe-hover;
        }
      }
    }

    @else {
      @if ($table-stripe == even) {
        // Darkens the even striped table rows.
        &.striped tr:nth-of-type(even):hover {
          background-color: $table-row-stripe-hover;
        }
      }

      @else if ($table-stripe == odd) {
        // Darkens the odd striped table rows.
        &.striped tr:nth-of-type(odd):hover {
          background-color: $table-row-stripe-hover;
        }
      }
    }
  }
}

/// Adds styles for a stacked table. Useful for small-screen layouts.
/// @param {Boolean} $header [$show-header-for-stacked] - Show the first th of header when stacked.
@mixin table-stack($header: $show-header-for-stacked) {
  @if $header {
    thead {
      th {
        display: block;
      }
    }
  }

  @else {
    thead {
      display: none;
    }
  }

  tfoot {
    display: none;
  }

  tr,
  th,
  td {
    display: block;
  }

  td {
    border-top: 0;
  }
}

@mixin foundation-table($nest: false) {
  table {
    @include table($nest: $nest);
  }

  table.stack {
    @include breakpoint($table-stack-breakpoint down) {
      @include table-stack;
    }
  }

  table.scroll {
    @include table-scroll;
  }

  @if ($table-background-status) and ($table-background-hover-status) {
    table.hover {
      @include table-hover;
    }
  }

  .table-scroll {
    overflow-x: auto;
  }
}
